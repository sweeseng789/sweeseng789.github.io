var t=Object.create;var i=Object.defineProperty,u=Object.defineProperties,p=Object.getOwnPropertyDescriptor,v=Object.getOwnPropertyDescriptors,w=Object.getOwnPropertyNames,k=Object.getOwnPropertySymbols,q=Object.getPrototypeOf,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,x=Reflect.get;var m=(b,a)=>(a=Symbol[b])?a:Symbol.for("Symbol."+b),y=b=>{throw TypeError(b)};var o=(b,a,c)=>a in b?i(b,a,{enumerable:!0,configurable:!0,writable:!0,value:c}):b[a]=c,A=(b,a)=>{for(var c in a||={})n.call(a,c)&&o(b,c,a[c]);if(k)for(var c of k(a))r.call(a,c)&&o(b,c,a[c]);return b},B=(b,a)=>u(b,v(a));var C=(b,a)=>{var c={};for(var d in b)n.call(b,d)&&a.indexOf(d)<0&&(c[d]=b[d]);if(b!=null&&k)for(var d of k(b))a.indexOf(d)<0&&r.call(b,d)&&(c[d]=b[d]);return c};var D=(b,a)=>()=>(b&&(a=b(b=0)),a);var E=(b,a)=>()=>(a||b((a={exports:{}}).exports,a),a.exports),F=(b,a)=>{for(var c in a)i(b,c,{get:a[c],enumerable:!0})},s=(b,a,c,d)=>{if(a&&typeof a=="object"||typeof a=="function")for(let e of w(a))!n.call(b,e)&&e!==c&&i(b,e,{get:()=>a[e],enumerable:!(d=p(a,e))||d.enumerable});return b};var G=(b,a,c)=>(c=b!=null?t(q(b)):{},s(a||!b||!b.__esModule?i(c,"default",{value:b,enumerable:!0}):c,b)),H=b=>s(i({},"__esModule",{value:!0}),b),I=(b,a,c,d)=>{for(var e=d>1?void 0:d?p(a,c):a,f=b.length-1,g;f>=0;f--)(g=b[f])&&(e=(d?g(a,c,e):g(e))||e);return d&&e&&i(a,c,e),e};var J=(b,a,c)=>x(q(b),c,a);var K=(b,a,c)=>new Promise((d,e)=>{var f=h=>{try{j(c.next(h))}catch(l){e(l)}},g=h=>{try{j(c.throw(h))}catch(l){e(l)}},j=h=>h.done?d(h.value):Promise.resolve(h.value).then(f,g);j((c=c.apply(b,a)).next())}),z=function(b,a){this[0]=b,this[1]=a};var L=b=>{var a=b[m("asyncIterator")],c=!1,d,e={};return a==null?(a=b[m("iterator")](),d=f=>e[f]=g=>a[f](g)):(a=a.call(b),d=f=>e[f]=g=>{if(c){if(c=!1,f==="throw")throw g;return g}return c=!0,{done:!1,value:new z(new Promise(j=>{var h=a[f](g);h instanceof Object||y("Object expected"),j(h)}),1)}}),e[m("iterator")]=()=>e,d("next"),"throw"in a?d("throw"):e.throw=f=>{throw f},"return"in a&&d("return"),e};export{A as a,B as b,C as c,D as d,E as e,F as f,G as g,H as h,I as i,J as j,K as k,L as l};
